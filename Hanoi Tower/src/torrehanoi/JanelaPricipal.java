/*
 * JanelaPricipal.java
 *
 * Created on 2 de Setembro de 2008, 15:56
 */

package torrehanoi;

import java.awt.Color;
import java.awt.Toolkit;
import java.util.Stack;
import javax.swing.JPanel;
/**
 *
 * @author  XNA_3
 */
public class JanelaPricipal extends javax.swing.JFrame {
    public JanelaPricipal() {
        setSize(600, 400);
        setLocation((Toolkit.getDefaultToolkit().getScreenSize().width-getWidth())/2,
                    (Toolkit.getDefaultToolkit().getScreenSize().height-getHeight())/2
        );
        setTitle("Simulacao - Torre de Hanoi");
        setResizable(false);
        initComponents();
        
        // colocando as estacas     
        colocaEstacas();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PainelPrincipal = new javax.swing.JPanel();
        BotaoSimular = new javax.swing.JButton();
        SpinnerDosDiscos = new javax.swing.JSpinner();
        LabelIteracoes = new javax.swing.JLabel();
        LabelDosDiscos = new javax.swing.JLabel();
        Separador2 = new javax.swing.JSeparator();
        Separador1 = new javax.swing.JSeparator();
        CampoDosDiscos = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BotaoSimular.setText("Simular!");
        BotaoSimular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoSimularActionPerformed(evt);
            }
        });

        SpinnerDosDiscos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SpinnerDosDiscosStateChanged(evt);
            }
        });

        LabelIteracoes.setText("ITERAÇÕES: 0");

        LabelDosDiscos.setText("DISCOS");

        CampoDosDiscos.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout CampoDosDiscosLayout = new javax.swing.GroupLayout(CampoDosDiscos);
        CampoDosDiscos.setLayout(CampoDosDiscosLayout);
        CampoDosDiscosLayout.setHorizontalGroup(
            CampoDosDiscosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 462, Short.MAX_VALUE)
        );
        CampoDosDiscosLayout.setVerticalGroup(
            CampoDosDiscosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 216, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout PainelPrincipalLayout = new javax.swing.GroupLayout(PainelPrincipal);
        PainelPrincipal.setLayout(PainelPrincipalLayout);
        PainelPrincipalLayout.setHorizontalGroup(
            PainelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(CampoDosDiscos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PainelPrincipalLayout.createSequentialGroup()
                        .addComponent(BotaoSimular)
                        .addGap(18, 18, 18)
                        .addComponent(LabelDosDiscos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SpinnerDosDiscos, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Separador2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                    .addComponent(LabelIteracoes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Separador1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE))
                .addContainerGap())
        );
        PainelPrincipalLayout.setVerticalGroup(
            PainelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelIteracoes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Separador1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CampoDosDiscos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Separador2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotaoSimular)
                    .addComponent(LabelDosDiscos, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SpinnerDosDiscos, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PainelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PainelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
private void SpinnerDosDiscosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SpinnerDosDiscosStateChanged
// TODO add your handling code here:
    alocaDiscos();
}//GEN-LAST:event_SpinnerDosDiscosStateChanged

private void BotaoSimularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoSimularActionPerformed
// TODO add your handling code here:
    alocaDiscos();
    LabelIteracoes.setText("ITERAÇÕES: 0");
    if(Torre1.size() > 0) {
        BotaoSimular.setEnabled(false);
        SpinnerDosDiscos.setEnabled(false);
        new Hanoi((Integer)SpinnerDosDiscos.getValue(), Torre1, Torre2, Torre3, LabelIteracoes, BotaoSimular, SpinnerDosDiscos).start();
    }
}//GEN-LAST:event_BotaoSimularActionPerformed

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaPricipal().setVisible(true);
            }
        });
    }
    
    private void alocaDiscos() {
        // limita o valor do spinner
        if((Integer)SpinnerDosDiscos.getValue() > 10) {
            SpinnerDosDiscos.setValue(10);
        }
        else if((Integer)SpinnerDosDiscos.getValue() < 0) {
            SpinnerDosDiscos.setValue(0);
        }
        
        // removendo todos os discos da interface
        for(int i=0; i<Torre1.size(); i++) {
            Torre1.get(i).setVisible(false);
        }
        for(int i=0; i<Torre2.size(); i++) {
            Torre2.get(i).setVisible(false);
        }
        for(int i=0; i<Torre3.size(); i++) {
            Torre3.get(i).setVisible(false);
        }
        Torre1.clear();
        Torre2.clear();
        Torre3.clear();
        CampoDosDiscos.removeAll();
        colocaEstacas();
        
        // readicionando os discos
        for(int i=0; i<(Integer)SpinnerDosDiscos.getValue(); i++) {
            Torre1.push(new Disco((Integer)SpinnerDosDiscos.getValue()-i-1));
            CampoDosDiscos.add(Torre1.get(i));
            Torre1.get(i).setBackground(Color.RED);
        }
        for(int i=0; i<Torre1.size(); i++) {
            Torre1.get(i).setLocation(
                    85-Torre1.get(i).getTamanho()*3,
                    260-Torre1.get((Integer)SpinnerDosDiscos.getValue()-i-1).getTamanho()*10
            );
            setComponentZOrder(Torre1.get(i), i);
        }
    }

    private void colocaEstacas() {
        estaca1.setLocation(80, 50);
        estaca1.setSize(10, 150);
        estaca1.setBackground(Color.BLACK);
        estaca1.setVisible(true);
        CampoDosDiscos.add(estaca1);
        
        estaca2.setLocation(225, 50);
        estaca2.setSize(10, 150);
        estaca2.setBackground(Color.BLACK);
        estaca2.setVisible(true);
        CampoDosDiscos.add(estaca2);
        
        estaca3.setLocation(370, 50);
        estaca3.setSize(10, 150);
        estaca3.setBackground(Color.BLACK);
        estaca3.setVisible(true);
        CampoDosDiscos.add(estaca3);
        
        piso.setLocation(0, 185);
        piso.setSize(470, 40);
        piso.setBackground(Color.BLACK);
        piso.setVisible(true);
        CampoDosDiscos.add(piso);
    }

    // torres
    Stack<Disco> Torre1 = new Stack<Disco>();
    Stack<Disco> Torre2 = new Stack<Disco>();
    Stack<Disco> Torre3 = new Stack<Disco>();
    // interface gráfica
    private JPanel piso = new JPanel();
    private JPanel estaca1 = new JPanel();
    private JPanel estaca2 = new JPanel();
    private JPanel estaca3 = new JPanel();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotaoSimular;
    private javax.swing.JPanel CampoDosDiscos;
    private javax.swing.JLabel LabelDosDiscos;
    private javax.swing.JLabel LabelIteracoes;
    private javax.swing.JPanel PainelPrincipal;
    private javax.swing.JSeparator Separador1;
    private javax.swing.JSeparator Separador2;
    private javax.swing.JSpinner SpinnerDosDiscos;
    // End of variables declaration//GEN-END:variables

}
